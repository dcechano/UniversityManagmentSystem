DROP TABLE IF EXISTS DEPARTMENT;

CREATE TABLE DEPARTMENT(
    ID BIGINT IDENTITY PRIMARY KEY,
    VERSION INT,
    MODIFIED_AT TIMESTAMP,
    NAME VARCHAR(50) NOT NULL
);

DROP TABLE IF EXISTS PROGRAM;

CREATE TABLE PROGRAM(
    ID BIGINT IDENTITY PRIMARY KEY,
    VERSION INT,
    MODIFIED_AT TIMESTAMP,
    NAME VARCHAR(50),
    DEPARTMENT BIGINT NOT NULL,
    FOREIGN KEY (DEPARTMENT) REFERENCES DEPARTMENT(ID)
);

DROP TABLE IF EXISTS FACULTYMEMBER;

CREATE TABLE FACULTYMEMBER
(
  ID BIGINT IDENTITY PRIMARY KEY,
  VERSION INT,
  MODIFIED_AT TIMESTAMP,
  FIRST_NAME VARCHAR(50) NOT NULL,
  LAST_NAME VARCHAR(50) NOT NULL,
  STATUS VARCHAR(16),
  HIRING_DATE TIMESTAMP,
  DEPARTMENT BIGINT  NOT NULL,
  FOREIGN KEY (DEPARTMENT) REFERENCES DEPARTMENT(ID)
);

DROP TABLE IF EXISTS STAFFMEMBER;

CREATE TABLE STAFFMEMBER
(
  ID BIGINT IDENTITY PRIMARY KEY,
  VERSION INT,
  MODIFIED_AT TIMESTAMP,
  FIRST_NAME VARCHAR(50) NOT NULL,
  LAST_NAME VARCHAR(50) NOT NULL,
  HIRING_DATE TIMESTAMP,
  DEPARTMENT BIGINT NOT NULL,
  STATUS VARCHAR(16),
  FOREIGN KEY (DEPARTMENT) REFERENCES DEPARTMENT(ID)
);

DROP TABLE IF EXISTS STUDENT;

CREATE TABLE STUDENT
(
  ID BIGINT IDENTITY PRIMARY KEY,
  VERSION INT,
  MODIFIED_AT TIMESTAMP,
  FIRST_NAME VARCHAR(50) NOT NULL,
  LAST_NAME VARCHAR(50) NOT NULL,
  ENROLLMENT_DATE TIMESTAMP,
  MAJOR BIGINT,
  STATUS VARCHAR(16),
  FOREIGN KEY (MAJOR) REFERENCES PROGRAM(ID)
);

DROP TABLE IF EXISTS COURSE;

CREATE TABLE COURSE(
  ID BIGINT IDENTITY PRIMARY KEY,
  VERSION INT,
  MODIFIED_AT TIMESTAMP,
  NAME VARCHAR(50) NOT NULL,
  INSTRUCTOR BIGINT NOT NULL,
  FOREIGN KEY (INSTRUCTOR) REFERENCES FACULTYMEMBER(ID)
);

DROP TABLE IF EXISTS FACULTY_COURSES;

CREATE TABLE COURSE_GRADE(
    STUDENT_ID BIGINT NOT NULL,
    COURSE_ID BIGINT NOT NULL,
    MODIFIED_AT TIMESTAMP,
    GRADE VARCHAR(2),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(ID),
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(ID),
    CONSTRAINT COMP_KEY PRIMARY KEY (STUDENT_ID, COURSE_ID)
);
