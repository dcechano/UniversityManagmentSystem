USE `universitymanagementsystem`;


CREATE TABLE DEPARTMENT
(
    ID          BIGINT      NOT NULL auto_increment,
    VERSION     INT,
    MODIFIED_AT TIMESTAMP,
    NAME        VARCHAR(50) NOT NULL,
    primary key (`ID`)
);

CREATE TABLE PROGRAM
(
    ID          BIGINT NOT NULL auto_increment,
    VERSION     INT,
    MODIFIED_AT TIMESTAMP,
    NAME        VARCHAR(50),
    DEPARTMENT  BIGINT NOT NULL,
    FOREIGN KEY (DEPARTMENT) REFERENCES DEPARTMENT (ID),
    primary key (`ID`)
);

CREATE TABLE PERSON
(
    ID          BIGINT             NOT NULL auto_increment,
    USERNAME    VARCHAR(50) UNIQUE NOT NULL,
    FIRST_NAME  VARCHAR(50)        NOT NULL,
    LAST_NAME   VARCHAR(50)        NOT NULL,
    VERSION     INT,
    MODIFIED_AT TIMESTAMP,
    PASSWORD    VARCHAR(100)       NOT NULL,
    primary key (`id`)
);

CREATE TABLE ROLES
(
    ID   BIGINT      NOT NULL auto_increment,
    NAME VARCHAR(20) NOT NULL,
    primary key (`ID`)
);

CREATE TABLE `PERSON_ROLES`
(
    `ID` BIGINT NOT NULL,
    `ROLE` BIGINT NOT NULL,

    PRIMARY KEY (`ID`, `ROLE`),

    KEY `FK_ROLE_idx` (`ROLE`),

    CONSTRAINT `FK_USER_05` FOREIGN KEY (`ID`)
        REFERENCES `person` (`id`)
        ON DELETE NO ACTION ON UPDATE NO ACTION,

    CONSTRAINT `FK_ROLE` FOREIGN KEY (`ROLE`)
        REFERENCES `roles` (`id`)
        ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE = InnoDB DEFAULT CHARSET = latin1;

CREATE TABLE FACULTYMEMBER
(
    ID          BIGINT      NOT NULL auto_increment,
    VERSION     INT,
    MODIFIED_AT TIMESTAMP,
    STATUS      VARCHAR(16),
    HIRING_DATE DATE,
    DEPARTMENT  BIGINT      NOT NULL,
    FOREIGN KEY (DEPARTMENT) REFERENCES DEPARTMENT (ID),
    primary key (`ID`)
);

CREATE TABLE STAFFMEMBER
(
    ID          BIGINT      NOT NULL auto_increment,
    VERSION     INT,
    MODIFIED_AT TIMESTAMP,
    HIRING_DATE TIMESTAMP,
    DEPARTMENT  BIGINT      NOT NULL,
    STATUS      VARCHAR(16),
    FOREIGN KEY (DEPARTMENT) REFERENCES DEPARTMENT (ID),
    primary key (`ID`)
);

CREATE TABLE STUDENT
(
    ID              BIGINT NOT NULL auto_increment,
    VERSION         INT,
    MODIFIED_AT     TIMESTAMP,
    ENROLLMENT_DATE date,
    MAJOR           BIGINT,
    STATUS          VARCHAR(18),
    FOREIGN KEY (MAJOR) REFERENCES PROGRAM (ID),
    primary key (`ID`)
);

CREATE TABLE COURSE
(
    ID          BIGINT      NOT NULL auto_increment,
    VERSION     INT,
    MODIFIED_AT TIMESTAMP,
    NAME        VARCHAR(50) NOT NULL,
    INSTRUCTOR  BIGINT      NOT NULL,
    DEPARTMENT  BIGINT      NOT NULL,
    FOREIGN KEY (INSTRUCTOR) REFERENCES FACULTYMEMBER (ID),
    FOREIGN KEY (DEPARTMENT) REFERENCES DEPARTMENT (ID),
    primary key (`ID`)
);

CREATE TABLE COURSE_GRADE
(
    STUDENT_ID  BIGINT NOT NULL,
    COURSE_ID   BIGINT NOT NULL,
    MODIFIED_AT TIMESTAMP,
    GRADE       VARCHAR(6),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT (ID),
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE (ID),
    CONSTRAINT COURSE_GRADE_KEY PRIMARY KEY (STUDENT_ID, COURSE_ID)
);

CREATE TABLE TOUR
(
    ID            BIGINT      NOT NULL AUTO_INCREMENT,
    CREATED_AT    DATETIME    NOT NULL,
    SCHEDULED_FOR DATETIME    NOT NULL,
    FIRST_NAME    VARCHAR(50) NOT NULL,
    LAST_NAME     VARCHAR(50) NOT NULL,
    MODIFIED_AT TIMESTAMP,
	VERSION INT,
    PRIMARY KEY (`ID`)
);
